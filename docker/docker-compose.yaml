version: '3.8'

networks:
  app:
    driver: bridge

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local

services:
#  generator:
#    image: 'romanzhula/simple-kafka-app:data-generate'
#    networks:
#      - app
#    depends_on:
#      - postgres
#      - kafka
#    ports:
#      - '8081:8081'
#
#  analyser:
#    image: 'romanzhula/simple-kafka-app:data-analyse'
#    networks:
#      - app
#    depends_on:
#      - kafka
#    ports:
#      - '8082:8082'
#
#  store:
#    image: 'romanzhula/simple-kafka-app:data-store'
#    networks:
#      - app
#    depends_on:
#      - postgres
#      - kafka
#    ports:
#      - '8083:8083'

  generator:
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    ports:
      - '8081:8081'

  analyser:
    build:
      context: ./data-analyser
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - kafka
    ports:
      - '8082:8082'

  store:
    build:
      context: ./data-store
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    ports:
      - '8083:8083'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    networks:
      - app
    ports:
      - '2181:2181'
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    networks:
      - app
    ports:
      - '9092:9092'
    volumes:
      - kafka-data:/var/lib/kafka/data

  postgres:
    image: 'postgres:latest'
    networks:
      - app
    ports:
      - '5437:5432'
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-rc-alpine
    networks:
      - app
    ports:
      - '6379:6379'
    command:
      - redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data